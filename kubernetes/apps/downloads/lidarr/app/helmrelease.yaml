---
# yaml-language-server: $schema=https://raw.githubusercontent.com/ishioni/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lidarr
  namespace: downloads
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          secret.reloader.stakater.com/reload: &secret lidarr-secret
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: lidarr-secret
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 50Gi
              storageClass: k8s-config
              globalMounts:
                - path: /config
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1027
            runAsGroup: 1027
            fsGroup: 1027
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 65536
        containers:
          *app :
            image:
              repository: ghcr.io/onedr0p/lidarr-develop
              tag: 2.5.2.4316@sha256:6b1b51ca85dad4f0376b6f86df4cb24d1d6c621ba9d47c1bde26cdb940f2aeb6
            env:
              TZ: America/Denver
              LIDARR__INSTANCE_NAME: ${APP}
              LIDARR__PORT: &port 80
              LIDARR__AUTHENTICATION_METHOD: Forms
              LIDARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              LIDARR__APPLICATION_URL: "https://$HOSTNAME"
              LIDARR__THEME: dark
              COMPlus_EnableDiagnostics: "0"
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 500Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    persistence:
      config:
        accessMode: ReadWriteOnce
        size: 50Gi
        storageClass: k8s-config
        retain: true
        globalMounts:
          - path: /config
      media:
        existingClaim: glabdownloadsclaim
        globalMounts:
          - path: /media
      tmp:
        type: emptyDir
    ingress:
      *app :
        enabled: true
        className: internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: &host "lidarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: *app
                  port: *port
        tls:
          - hosts:
            - *host
